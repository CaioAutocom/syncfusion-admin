/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 1.0
 */
import type {
  AtualizarPessoaParams,
  CreatePersonRequest,
  DeletarPessoaParams,
  ListarPessoasParams,
  ObterPessoaPorCpfCnpjParams,
  ObterPessoaPorIdParams,
  ObterPessoaPorNomeParams,
  PersonResponse,
  PersonResponseIPagedList,
  UpdatePersonRequest
} from '../../interfaces/api'
import { customInstance } from '../../api/api-interceptor';
import type { BodyType } from '../../api/api-interceptor';


type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


  export const getPersons = () => {
/**
 * @summary Cria uma nova pessoa.
 */
const criarPessoa = (
    createPersonRequest: BodyType<CreatePersonRequest>,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<string>(
      {url: `/api/person/create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createPersonRequest
    },
      options);
    }
  /**
 * @summary Obt√©m uma pessoa pelo Id.
 */
const obterPessoaPorId = (
    params: ObterPessoaPorIdParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<PersonResponse>(
      {url: `/api/person/id`, method: 'GET',
        params
    },
      options);
    }
  /**
 * @summary Obt√©m uma pessoa pelo Nome.
 */
const obterPessoaPorNome = (
    params: ObterPessoaPorNomeParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<PersonResponse>(
      {url: `/api/person/name`, method: 'GET',
        params
    },
      options);
    }
  /**
 * @summary Obt√©m uma pessoa pelo CpfCnpj.
 */
const obterPessoaPorCpfCnpj = (
    params: ObterPessoaPorCpfCnpjParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<PersonResponse>(
      {url: `/api/person/cpfCnpj`, method: 'GET',
        params
    },
      options);
    }
  /**
 * @summary Lista todas as pessoas cadastradas.
 */
const listarPessoas = (
    params?: ListarPessoasParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<PersonResponseIPagedList>(
      {url: `/api/person/list-all`, method: 'GET',
        params
    },
      options);
    }
  /**
 * @summary Atualiza dados da pessoa.
 */
const atualizarPessoa = (
    updatePersonRequest: BodyType<UpdatePersonRequest>,
    params: AtualizarPessoaParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/person/update`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updatePersonRequest,
        params
    },
      options);
    }
  /**
 * @summary Deleta uma pessoa.
 */
const deletarPessoa = (
    params: DeletarPessoaParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/person/delete`, method: 'DELETE',
        params
    },
      options);
    }
  return {criarPessoa,obterPessoaPorId,obterPessoaPorNome,obterPessoaPorCpfCnpj,listarPessoas,atualizarPessoa,deletarPessoa}};
export type CriarPessoaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['criarPessoa']>>>
export type ObterPessoaPorIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['obterPessoaPorId']>>>
export type ObterPessoaPorNomeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['obterPessoaPorNome']>>>
export type ObterPessoaPorCpfCnpjResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['obterPessoaPorCpfCnpj']>>>
export type ListarPessoasResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['listarPessoas']>>>
export type AtualizarPessoaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['atualizarPessoa']>>>
export type DeletarPessoaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getPersons>['deletarPessoa']>>>
